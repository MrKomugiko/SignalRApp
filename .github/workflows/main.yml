name: ci

on:
  push:
    branches:
      - "master"

jobs:
  build:
    runs-on: 
      labels: ASUS-MRKOMUGIKO
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./SignalRApp/Server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/signalr-app:latest
          
  pull:
    needs: build
    runs-on: 
      labels: ASUS-MRKOMUGIKO
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Pull
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/signalr-app:latest
      
  deploy:
    needs: pull
    runs-on:
      labels: ASUS-MRKOMUGIKO
    steps:
      -
        name: Deploy
        run: |
          docker stop blazor_signalrapp
          docker rm blazor_signalrapp
          docker run -d -p 8080:80 --name blazor_signalrapp ${{ secrets.DOCKERHUB_USERNAME }}/signalr-app:latest
#      -
#        name: Start ngrok tunell
#        run: start cmd /c "ngrok http 80"
#      -
#        name: Get public address
#        shell: pwsh
#        run: |
#          $WebResponse = Invoke-WebRequest -Uri "http://localhost:4040/api/tunnels"
#          $release = ConvertFrom-Json $WebResponse.content
#          $release.tunnels[0].public_url
